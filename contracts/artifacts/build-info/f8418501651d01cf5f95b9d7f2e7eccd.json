{
	"id": "f8418501651d01cf5f95b9d7f2e7eccd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FaxenToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// 100000000000000000000    = 1000FAX\n\ncontract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {\n     uint256 private immutable _cap;\n    \n    constructor() ERC20(\"FaxenToken\", \"FAX\") {\n        _cap = 10**27;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20: cap exceeded\");\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        whenNotPaused\n        override\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function maxSupply() public view virtual returns (uint256) {\n        return cap();\n    }\n\n    function withdraw() public onlyOwner{\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    ERC20 exContract;\n    function withdrawBEP(address tokenContractAddress, address to, uint256 amount) public onlyOwner {\n        exContract = ERC20(tokenContractAddress);\n        exContract.transfer(to,amount);\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_140:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_148:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_150:\n        /* \"#utility.yul\":962:991   */\n      tag_151\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_155:\n        /* \"#utility.yul\":1612:1641   */\n      tag_156\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_157\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_160:\n        /* \"#utility.yul\":2100:2129   */\n      tag_161\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_163:\n        /* \"#utility.yul\":2308:2337   */\n      tag_164\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_165\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_167:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb4b33e78d2f374e959226b51703dea18205eb8372404fdf9310982631fae48364736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:8"
															},
															"nodeType": "YulIf",
															"src": "921:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:8"
															},
															"nodeType": "YulIf",
															"src": "1164:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:8"
															},
															"nodeType": "YulIf",
															"src": "1301:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:8"
															},
															"nodeType": "YulIf",
															"src": "1474:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:8",
														"type": ""
													}
												],
												"src": "1036:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:8"
															},
															"nodeType": "YulIf",
															"src": "1746:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:8"
															},
															"nodeType": "YulIf",
															"src": "1816:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:8",
														"type": ""
													}
												],
												"src": "1603:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000aef38038062000aef8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61085d80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb4b33e78d2f374e959226b51703dea18205eb8372404fdf9310982631fae48364736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAEF CODESIZE SUB DUP1 PUSH3 0xAEF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85D DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x4B CALLER 0xE7 DUP14 0x2F CALLDATACOPY 0x4E SWAP6 SWAP3 0x26 0xB5 OR SUB 0xDE LOG1 DUP3 SDIV 0xEB DUP4 PUSH19 0x404FDF9310982631FAE48364736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "1401:11610:2:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:2;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:11610:2;;;-1:-1:-1;1401:11610:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1401:11610:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 856,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_784": {
									"entryPoint": 1148,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 1270,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 813,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 562,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 671,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 622,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_275": {
									"entryPoint": 416,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_285": {
									"entryPoint": 656,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 586,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_344": {
									"entryPoint": 799,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:8"
															},
															"nodeType": "YulIf",
															"src": "443:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:8"
															},
															"nodeType": "YulIf",
															"src": "713:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:8",
														"type": ""
													}
												],
												"src": "616:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:8"
															},
															"nodeType": "YulIf",
															"src": "891:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:8",
														"type": ""
													}
												],
												"src": "794:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:8",
														"type": ""
													}
												],
												"src": "1053:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:8",
														"type": ""
													}
												],
												"src": "1245:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:8"
															},
															"nodeType": "YulIf",
															"src": "1541:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"src": "1427:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:8",
														"type": ""
													}
												],
												"src": "1760:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:8"
															},
															"nodeType": "YulIf",
															"src": "2029:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:8",
														"type": ""
													}
												],
												"src": "1949:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:8"
															},
															"nodeType": "YulIf",
															"src": "2237:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:8",
														"type": ""
													}
												],
												"src": "2140:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:8"
															},
															"nodeType": "YulIf",
															"src": "2548:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:8"
															},
															"nodeType": "YulIf",
															"src": "2618:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:8",
														"type": ""
													}
												],
												"src": "2405:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:8"
															},
															"nodeType": "YulIf",
															"src": "2848:136:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:8",
														"type": ""
													}
												],
												"src": "2790:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:8",
														"type": ""
													}
												],
												"src": "3020:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:8",
														"type": ""
													}
												],
												"src": "3426:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:8",
														"type": ""
													}
												],
												"src": "3831:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:8",
														"type": ""
													}
												],
												"src": "4234:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:8",
														"type": ""
													}
												],
												"src": "4592:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:8",
														"type": ""
													}
												],
												"src": "4998:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:8",
														"type": ""
													}
												],
												"src": "5402:402:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb4b33e78d2f374e959226b51703dea18205eb8372404fdf9310982631fae48364736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x4B CALLER 0xE7 DUP14 0x2F CALLDATACOPY 0x4E SWAP6 SWAP3 0x26 0xB5 OR SUB 0xDE LOG1 DUP3 SDIV 0xEB DUP4 PUSH19 0x404FDF9310982631FAE48364736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "1401:11610:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4431:197:2;1053:187:8;3242:106:2;3329:12;;3242:106;;;1391:25:8;;;1379:2;1364:18;3242:106:2;1245:177:8;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1902:36:8;;1890:2;1875:18;3091:91:2;1760:184:8;5871:234:2;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:2;719:10:6;4584:7:2;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:2;;4431:197;-1:-1:-1;;;4431:197:2:o;5190:286::-;5317:4;719:10:6;5373:38:2;5389:4;719:10:6;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:6;6013:64:2;719:10:6;6029:7:2;6066:10;6038:25;719:10:6;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:2;6766:25;719:10:6;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:2;;3222:2:8;6801:85:2;;;3204:21:8;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:8;;;3344:35;3396:19;;6801:85:2;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:2;719:10:6;3877:2:2;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;10627:68:2;;3628:2:8;10627:68:2;;;3610:21:8;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:8;;;3750:34;3801:19;;10627:68:2;3426:400:8;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;10705:68:2;;4033:2:8;10705:68:2;;;4015:21:8;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:8;;;4155:32;4204:19;;10705:68:2;3831:398:8;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:8;;;10835:32:2;;1364:18:8;10835:32:2;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:2;;4436:2:8;11404:68:2;;;4418:21:8;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11404:68:2;4234:353:8;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;7591:68:2;;4794:2:8;7591:68:2;;;4776:21:8;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:8;;;4916:35;4968:19;;7591:68:2;4592:401:8;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;7669:64:2;;5200:2:8;7669:64:2;;;5182:21:8;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:8;;;5322:33;5372:19;;7669:64:2;4998:399:8;7669:64:2;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:2;;5604:2:8;7840:72:2;;;5586:21:8;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:8;;;5726:36;5779:19;;7840:72:2;5402:402:8;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:8;;;8161:13:2;;8210:26;;1364:18:8;8210:26:2;;;;;;;8247:37;12180:121;14:597:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:8:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:8;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51134",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb4b33e78d2f374e959226b51703dea18205eb8372404fdf9310982631fae48364736f6c634300080a0033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FaxenToken.sol": {
				"FaxenToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawBEP",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"maxSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FaxenToken.sol\":337:1673  contract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/FaxenToken.sol\":449:520  constructor() ERC20(\"FaxenToken\", \"FAX\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x2330bc32b72a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xeb, 0x08c82b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/FaxenToken.sol\":507:513  10**27 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/FaxenToken.sol\":500:513  _cap = 10**27 */\n  0x80\n  mstore\n    /* \"contracts/FaxenToken.sol\":337:1673  contract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/FaxenToken.sol\":337:1673  contract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_23\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_26)\ntag_23:\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\n    /* \"#utility.yul\":14:394   */\ntag_21:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_33:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_34:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"contracts/FaxenToken.sol\":337:1673  contract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/FaxenToken.sol\":337:1673  contract FaxenToken is ERC20, ERC20Burnable, Pausable, Ownable  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x39509351\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ad5941f\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_34\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_32\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"contracts/FaxenToken.sol\":1110:1191  function cap() public view virtual returns (uint256) {... */\n    tag_8:\n        /* \"contracts/FaxenToken.sol\":1180:1184  _cap */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"contracts/FaxenToken.sol\":1110:1191  function cap() public view virtual returns (uint256) {... */\n      jump(tag_40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_34\n      tag_57\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":1345:1449  function withdraw() public onlyOwner{... */\n    tag_10:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/FaxenToken.sol\":591:654  function unpause() public onlyOwner {... */\n    tag_11:\n      tag_60\n      tag_63\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":660:832  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_12:\n      tag_60\n      tag_65\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_13:\n      tag_60\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":1477:1670  function withdrawBEP(address tokenContractAddress, address to, uint256 amount) public onlyOwner {... */\n    tag_14:\n      tag_60\n      tag_72\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_34)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_60\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_18:\n      tag_60\n      tag_85\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":526:585  function pause() public onlyOwner {... */\n    tag_19:\n      tag_60\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2489:2521   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2471:2522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2459:2461   */\n      0x20\n        /* \"#utility.yul\":2444:2462   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_32\n        /* \"#utility.yul\":2325:2528   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_21:\n      tag_30\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_22:\n      tag_34\n      tag_97\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_25:\n      tag_40\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_60\n      tag_113\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_132:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":1345:1449  function withdraw() public onlyOwner{... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/FaxenToken.sol\":1391:1442  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"contracts/FaxenToken.sol\":1399:1409  msg.sender */\n      caller\n      swap1\n        /* \"contracts/FaxenToken.sol\":1420:1441  address(this).balance */\n      selfbalance\n        /* \"contracts/FaxenToken.sol\":1391:1442  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/FaxenToken.sol\":1420:1441  address(this).balance */\n      dup6\n        /* \"contracts/FaxenToken.sol\":1399:1409  msg.sender */\n      dup9\n        /* \"contracts/FaxenToken.sol\":1391:1442  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n        /* \"contracts/FaxenToken.sol\":1345:1449  function withdraw() public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/FaxenToken.sol\":591:654  function unpause() public onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/FaxenToken.sol\":637:647  _unpause() */\n      tag_151\n        /* \"contracts/FaxenToken.sol\":637:645  _unpause */\n      tag_152\n        /* \"contracts/FaxenToken.sol\":637:647  _unpause() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/FaxenToken.sol\":591:654  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FaxenToken.sol\":660:832  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/FaxenToken.sol\":1180:1184  _cap */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"contracts/FaxenToken.sol\":759:765  amount */\n      dup2\n        /* \"contracts/FaxenToken.sol\":737:756  ERC20.totalSupply() */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/FaxenToken.sol\":737:756  ERC20.totalSupply() */\n    tag_157:\n        /* \"contracts/FaxenToken.sol\":737:765  ERC20.totalSupply() + amount */\n      tag_158\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"contracts/FaxenToken.sol\":737:774  ERC20.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"contracts/FaxenToken.sol\":729:798  require(ERC20.totalSupply() + amount <= cap(), \"ERC20: cap exceeded\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x20\n        /* \"contracts/FaxenToken.sol\":729:798  require(ERC20.totalSupply() + amount <= cap(), \"ERC20: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3597:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3656   */\n      0x13\n        /* \"#utility.yul\":3634:3652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3627:3657   */\n      mstore\n      shl(0x6a, 0x115490cc8c0e8818d85c08195e18d959591959)\n        /* \"#utility.yul\":3673:3691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3666:3715   */\n      mstore\n        /* \"#utility.yul\":3732:3750   */\n      0x64\n      add\n        /* \"contracts/FaxenToken.sol\":729:798  require(ERC20.totalSupply() + amount <= cap(), \"ERC20: cap exceeded\") */\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/FaxenToken.sol\":808:825  _mint(to, amount) */\n      tag_162\n        /* \"contracts/FaxenToken.sol\":814:816  to */\n      dup3\n        /* \"contracts/FaxenToken.sol\":818:824  amount */\n      dup3\n        /* \"contracts/FaxenToken.sol\":808:813  _mint */\n      tag_163\n        /* \"contracts/FaxenToken.sol\":808:825  _mint(to, amount) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/FaxenToken.sol\":660:832  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":1477:1670  function withdrawBEP(address tokenContractAddress, address to, uint256 amount) public onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/FaxenToken.sol\":1583:1593  exContract */\n      0x06\n        /* \"contracts/FaxenToken.sol\":1583:1623  exContract = ERC20(tokenContractAddress) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/FaxenToken.sol\":1633:1663  exContract.transfer(to,amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"#utility.yul\":3953:3985   */\n      swap2\n      dup5\n      and\n        /* \"contracts/FaxenToken.sol\":1633:1663  exContract.transfer(to,amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3935:3986   */\n      mstore\n        /* \"#utility.yul\":4002:4020   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3995:4029   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/FaxenToken.sol\":1583:1623  exContract = ERC20(tokenContractAddress) */\n      swap1\n        /* \"contracts/FaxenToken.sol\":1633:1652  exContract.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3908:3926   */\n      0x44\n      add\n        /* \"contracts/FaxenToken.sol\":1633:1663  exContract.transfer(to,amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      pop\n        /* \"contracts/FaxenToken.sol\":1477:1670  function withdrawBEP(address tokenContractAddress, address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n        /* \"contracts/FaxenToken.sol\":526:585  function pause() public onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/FaxenToken.sol\":570:578  _pause() */\n      tag_151\n        /* \"contracts/FaxenToken.sol\":570:576  _pause */\n      tag_192\n        /* \"contracts/FaxenToken.sol\":570:578  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4524:4526   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4506:4527   */\n      mstore\n        /* \"#utility.yul\":4563:4565   */\n      0x25\n        /* \"#utility.yul\":4543:4561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4536:4566   */\n      mstore\n        /* \"#utility.yul\":4602:4636   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4582:4600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4575:4637   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4653:4671   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4646:4681   */\n      mstore\n        /* \"#utility.yul\":4698:4717   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_160\n        /* \"#utility.yul\":4322:4723   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4912:4933   */\n      mstore\n        /* \"#utility.yul\":4969:4971   */\n      0x26\n        /* \"#utility.yul\":4949:4967   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4942:4972   */\n      mstore\n        /* \"#utility.yul\":5008:5042   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4988:5006   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4981:5043   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5059:5077   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5052:5088   */\n      mstore\n        /* \"#utility.yul\":5105:5124   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_160\n        /* \"#utility.yul\":4728:5130   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5337:5339   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5319:5340   */\n      mstore\n        /* \"#utility.yul\":5376:5378   */\n      0x24\n        /* \"#utility.yul\":5356:5374   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5349:5379   */\n      mstore\n        /* \"#utility.yul\":5415:5449   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5395:5413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5388:5450   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5466:5484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5459:5493   */\n      mstore\n        /* \"#utility.yul\":5510:5529   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_160\n        /* \"#utility.yul\":5135:5535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5742:5744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5724:5745   */\n      mstore\n        /* \"#utility.yul\":5781:5783   */\n      0x22\n        /* \"#utility.yul\":5761:5779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5754:5784   */\n      mstore\n        /* \"#utility.yul\":5820:5854   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5800:5818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5793:5855   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5871:5889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5864:5896   */\n      mstore\n        /* \"#utility.yul\":5913:5932   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_160\n        /* \"#utility.yul\":5540:5938   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6145:6147   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6127:6148   */\n      mstore\n        /* \"#utility.yul\":6184:6186   */\n      0x1d\n        /* \"#utility.yul\":6164:6182   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6157:6187   */\n      mstore\n        /* \"#utility.yul\":6223:6254   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6203:6221   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6196:6255   */\n      mstore\n        /* \"#utility.yul\":6272:6290   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_160\n        /* \"#utility.yul\":5943:6296   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6503:6505   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6485:6506   */\n      mstore\n        /* \"#utility.yul\":6542:6544   */\n      0x25\n        /* \"#utility.yul\":6522:6540   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6515:6545   */\n      mstore\n        /* \"#utility.yul\":6581:6615   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6561:6579   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6554:6616   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6632:6650   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6625:6660   */\n      mstore\n        /* \"#utility.yul\":6677:6696   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_160\n        /* \"#utility.yul\":6301:6702   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6909:6911   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6891:6912   */\n      mstore\n        /* \"#utility.yul\":6948:6950   */\n      0x23\n        /* \"#utility.yul\":6928:6946   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6921:6951   */\n      mstore\n        /* \"#utility.yul\":6987:7021   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6967:6985   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6960:7022   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":7038:7056   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7031:7064   */\n      mstore\n        /* \"#utility.yul\":7081:7100   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_160\n        /* \"#utility.yul\":6707:7106   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7313:7315   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7295:7316   */\n      mstore\n        /* \"#utility.yul\":7352:7354   */\n      0x26\n        /* \"#utility.yul\":7332:7350   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7325:7355   */\n      mstore\n        /* \"#utility.yul\":7391:7425   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7371:7389   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7364:7426   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":7442:7460   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7435:7471   */\n      mstore\n        /* \"#utility.yul\":7488:7507   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_160\n        /* \"#utility.yul\":7111:7513   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7720:7722   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7702:7723   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7739:7757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7732:7762   */\n      mstore\n        /* \"#utility.yul\":7798:7832   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7778:7796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7771:7833   */\n      mstore\n        /* \"#utility.yul\":7850:7868   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n        /* \"#utility.yul\":7518:7874   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_259\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_261:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2489:2521   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2471:2522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2459:2461   */\n      0x20\n        /* \"#utility.yul\":2444:2462   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8567:9102  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8650:8671  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8081:8083   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8063:8084   */\n      mstore\n        /* \"#utility.yul\":8120:8122   */\n      0x1f\n        /* \"#utility.yul\":8100:8118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8093:8123   */\n      mstore\n        /* \"#utility.yul\":8159:8192   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":8139:8157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8132:8193   */\n      mstore\n        /* \"#utility.yul\":8210:8228   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_160\n        /* \"#utility.yul\":7879:8234   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8642:8707  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8748  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8751:8758  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8760:8766  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8738  _beforeTokenTransfer */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8718:8767  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8794:8800  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8790  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8778:8800  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_268\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_268:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8964  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8946:8974  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8999:9036  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FaxenToken.sol\":660:832  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9505:9526  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8441:8443   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8423:8444   */\n      mstore\n        /* \"#utility.yul\":8480:8482   */\n      0x21\n        /* \"#utility.yul\":8460:8478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8453:8483   */\n      mstore\n        /* \"#utility.yul\":8519:8553   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":8499:8517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8492:8554   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":8570:8588   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8563:8594   */\n      mstore\n        /* \"#utility.yul\":8611:8630   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_160\n        /* \"#utility.yul\":8239:8636   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9497:9564  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9596:9603  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9623  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9595  _beforeTokenTransfer */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9575:9624  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9657  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9660:9678  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9696:9720  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8843:8845   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8825:8846   */\n      mstore\n        /* \"#utility.yul\":8882:8884   */\n      0x22\n        /* \"#utility.yul\":8862:8880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8855:8885   */\n      mstore\n        /* \"#utility.yul\":8921:8955   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":8901:8919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8894:8956   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8972:8990   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8965:8997   */\n      mstore\n        /* \"#utility.yul\":9014:9033   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_160\n        /* \"#utility.yul\":8641:9039   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9688:9759  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9802  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9814:9837  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9837  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9942  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9952  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9802  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9793:9811  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:10015  Transfer(account, address(0), amount) */\n      tag_228\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_283\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/FaxenToken.sol\":838:1031  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_244:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_289\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_284\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9487:10081  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9422:10081  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9246:9248   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9228:9249   */\n      mstore\n        /* \"#utility.yul\":9285:9287   */\n      0x14\n        /* \"#utility.yul\":9265:9283   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9258:9288   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9304:9322   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9297:9347   */\n      mstore\n        /* \"#utility.yul\":9364:9382   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_160\n        /* \"#utility.yul\":9044:9388   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9595:9597   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9577:9598   */\n      mstore\n        /* \"#utility.yul\":9634:9636   */\n      0x10\n        /* \"#utility.yul\":9614:9632   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9607:9637   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9653:9671   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9646:9692   */\n      mstore\n        /* \"#utility.yul\":9709:9727   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_160\n        /* \"#utility.yul\":9393:9733   */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_33:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_308:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_308)\n    tag_310:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_305:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_313:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_36:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_315:\n        /* \"#utility.yul\":962:991   */\n      tag_316\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_305\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_46:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_320:\n        /* \"#utility.yul\":1612:1641   */\n      tag_321\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_305\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_322\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_305\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2129   */\n    tag_69:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_325:\n      pop\n        /* \"#utility.yul\":2100:2123   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1949:2129   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2320   */\n    tag_79:\n        /* \"#utility.yul\":2193:2199   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2234:2243   */\n      dup3\n        /* \"#utility.yul\":2225:2232   */\n      dup5\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2266   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2262:2263   */\n      0x00\n        /* \"#utility.yul\":2259:2260   */\n      dup1\n        /* \"#utility.yul\":2252:2264   */\n      revert\n        /* \"#utility.yul\":2214:2266   */\n    tag_327:\n        /* \"#utility.yul\":2285:2314   */\n      tag_328\n        /* \"#utility.yul\":2304:2313   */\n      dup3\n        /* \"#utility.yul\":2285:2314   */\n      tag_305\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2275:2314   */\n      swap4\n        /* \"#utility.yul\":2134:2320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2533:2793   */\n    tag_109:\n        /* \"#utility.yul\":2601:2607   */\n      0x00\n        /* \"#utility.yul\":2609:2615   */\n      dup1\n        /* \"#utility.yul\":2662:2664   */\n      0x40\n        /* \"#utility.yul\":2650:2659   */\n      dup4\n        /* \"#utility.yul\":2641:2648   */\n      dup6\n        /* \"#utility.yul\":2637:2660   */\n      sub\n        /* \"#utility.yul\":2633:2665   */\n      slt\n        /* \"#utility.yul\":2630:2682   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2630:2682   */\n    tag_331:\n        /* \"#utility.yul\":2701:2730   */\n      tag_332\n        /* \"#utility.yul\":2720:2729   */\n      dup4\n        /* \"#utility.yul\":2701:2730   */\n      tag_305\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2691:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2749:2787   */\n      tag_333\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2772:2781   */\n      dup5\n        /* \"#utility.yul\":2768:2786   */\n      add\n        /* \"#utility.yul\":2749:2787   */\n      tag_305\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2739:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2533:2793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:3178   */\n    tag_117:\n        /* \"#utility.yul\":2877:2878   */\n      0x01\n        /* \"#utility.yul\":2873:2885   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2920:2932   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2941:3002   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":2995:2999   */\n      0x7f\n        /* \"#utility.yul\":2987:2993   */\n      dup3\n        /* \"#utility.yul\":2983:3000   */\n      and\n        /* \"#utility.yul\":2973:3000   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3002   */\n    tag_335:\n        /* \"#utility.yul\":3048:3050   */\n      0x20\n        /* \"#utility.yul\":3040:3046   */\n      dup3\n        /* \"#utility.yul\":3037:3051   */\n      lt\n        /* \"#utility.yul\":3017:3035   */\n      dup2\n        /* \"#utility.yul\":3014:3052   */\n      eq\n        /* \"#utility.yul\":3011:3172   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3094:3104   */\n      0x4e487b71\n        /* \"#utility.yul\":3089:3092   */\n      0xe0\n        /* \"#utility.yul\":3085:3105   */\n      shl\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3075:3106   */\n      mstore\n        /* \"#utility.yul\":3129:3133   */\n      0x22\n        /* \"#utility.yul\":3126:3127   */\n      0x04\n        /* \"#utility.yul\":3119:3134   */\n      mstore\n        /* \"#utility.yul\":3157:3161   */\n      0x24\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3147:3162   */\n      revert\n        /* \"#utility.yul\":3011:3172   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":2798:3178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3408   */\n    tag_141:\n        /* \"#utility.yul\":3223:3226   */\n      0x00\n        /* \"#utility.yul\":3254:3255   */\n      dup3\n        /* \"#utility.yul\":3250:3256   */\n      not\n        /* \"#utility.yul\":3247:3248   */\n      dup3\n        /* \"#utility.yul\":3244:3257   */\n      gt\n        /* \"#utility.yul\":3241:3377   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3299:3309   */\n      0x4e487b71\n        /* \"#utility.yul\":3294:3297   */\n      0xe0\n        /* \"#utility.yul\":3290:3310   */\n      shl\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3280:3311   */\n      mstore\n        /* \"#utility.yul\":3334:3338   */\n      0x11\n        /* \"#utility.yul\":3331:3332   */\n      0x04\n        /* \"#utility.yul\":3324:3339   */\n      mstore\n        /* \"#utility.yul\":3362:3366   */\n      0x24\n        /* \"#utility.yul\":3359:3360   */\n      0x00\n        /* \"#utility.yul\":3352:3367   */\n      revert\n        /* \"#utility.yul\":3241:3377   */\n    tag_338:\n      pop\n        /* \"#utility.yul\":3393:3402   */\n      add\n      swap1\n        /* \"#utility.yul\":3183:3408   */\n      jump\t// out\n        /* \"#utility.yul\":4040:4317   */\n    tag_176:\n        /* \"#utility.yul\":4107:4113   */\n      0x00\n        /* \"#utility.yul\":4160:4162   */\n      0x20\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4139:4146   */\n      dup5\n        /* \"#utility.yul\":4135:4158   */\n      sub\n        /* \"#utility.yul\":4131:4163   */\n      slt\n        /* \"#utility.yul\":4128:4180   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4176:4177   */\n      0x00\n        /* \"#utility.yul\":4173:4174   */\n      dup1\n        /* \"#utility.yul\":4166:4178   */\n      revert\n        /* \"#utility.yul\":4128:4180   */\n    tag_342:\n        /* \"#utility.yul\":4208:4217   */\n      dup2\n        /* \"#utility.yul\":4202:4218   */\n      mload\n        /* \"#utility.yul\":4261:4266   */\n      dup1\n        /* \"#utility.yul\":4254:4267   */\n      iszero\n        /* \"#utility.yul\":4247:4268   */\n      iszero\n        /* \"#utility.yul\":4240:4245   */\n      dup2\n        /* \"#utility.yul\":4237:4269   */\n      eq\n        /* \"#utility.yul\":4227:4287   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":4283:4284   */\n      0x00\n        /* \"#utility.yul\":4280:4281   */\n      dup1\n        /* \"#utility.yul\":4273:4285   */\n      revert\n\n    auxdata: 0xa26469706673582212208577046176867a43883d4c4b1064a20b73ade1e3b7a2ed93f1dd3491151133eb64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1006": {
									"entryPoint": null,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 173,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:8"
															},
															"nodeType": "YulIf",
															"src": "157:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:8"
															},
															"nodeType": "YulIf",
															"src": "227:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:8",
														"type": ""
													}
												],
												"src": "14:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b506040518060400160405280600a8152602001692330bc32b72a37b5b2b760b11b8152506040518060400160405280600381526020016208c82b60eb1b81525081600390805190602001906200006992919062000107565b5080516200007f90600490602084019062000107565b50506005805460ff19169055506200009733620000ad565b6b033b2e3c9fd0803ce8000000608052620001ea565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011590620001ad565b90600052602060002090601f01602090048101928262000139576000855562000184565b82601f106200015457805160ff191683800117855562000184565b8280016001018555821562000184579182015b828111156200018457825182559160200191906001019062000167565b506200019292915062000196565b5090565b5b8082111562000192576000815560010162000197565b600181811c90821680620001c257607f821691505b60208210811415620001e457634e487b7160e01b600052602260045260246000fd5b50919050565b6080516110336200020d600039600081816101d4015261046d01526110336000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80635c975abb116100c357806395d89b411161007c57806395d89b41146102d6578063a457c2d7146102de578063a9059cbb146102f1578063d5abeb01146101d2578063dd62ed3e14610304578063f2fde38b1461031757600080fd5b80635c975abb1461025657806370a0823114610261578063715018a61461028a57806379cc6790146102925780638456cb59146102a55780638da5cb5b146102ad57600080fd5b8063395093511161011557806339509351146101f85780633ccfd60b1461020b5780633f4ba83a1461021557806340c10f191461021d57806342966c68146102305780634ad5941f1461024357600080fd5b806306fdde031461015d578063095ea7b31461017b57806318160ddd1461019e57806323b872dd146101b0578063313ce567146101c3578063355274ea146101d2575b600080fd5b61016561032a565b6040516101729190610e35565b60405180910390f35b61018e610189366004610ea6565b6103bc565b6040519015158152602001610172565b6002545b604051908152602001610172565b61018e6101be366004610ed0565b6103d4565b60405160128152602001610172565b7f00000000000000000000000000000000000000000000000000000000000000006101a2565b61018e610206366004610ea6565b6103f8565b61021361041a565b005b610213610451565b61021361022b366004610ea6565b610463565b61021361023e366004610f0c565b6104f7565b610213610251366004610ed0565b610501565b60055460ff1661018e565b6101a261026f366004610f25565b6001600160a01b031660009081526020819052604090205490565b610213610597565b6102136102a0366004610ea6565b6105a9565b6102136105be565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610172565b6101656105ce565b61018e6102ec366004610ea6565b6105dd565b61018e6102ff366004610ea6565b610658565b6101a2610312366004610f47565b610666565b610213610325366004610f25565b610691565b60606003805461033990610f7a565b80601f016020809104026020016040519081016040528092919081815260200182805461036590610f7a565b80156103b25780601f10610387576101008083540402835291602001916103b2565b820191906000526020600020905b81548152906001019060200180831161039557829003601f168201915b5050505050905090565b6000336103ca818585610707565b5060019392505050565b6000336103e285828561082c565b6103ed8585856108a0565b506001949350505050565b6000336103ca81858561040b8383610666565b6104159190610fb5565b610707565b610422610a4f565b60405133904780156108fc02916000818181858888f1935050505015801561044e573d6000803e3d6000fd5b50565b610459610a4f565b610461610aaf565b565b61046b610a4f565b7f00000000000000000000000000000000000000000000000000000000000000008161049660025490565b6104a09190610fb5565b11156104e95760405162461bcd60e51b8152602060048201526013602482015272115490cc8c0e8818d85c08195e18d959591959606a1b60448201526064015b60405180910390fd5b6104f38282610b01565b5050565b61044e3382610bcc565b610509610a4f565b600680546001600160a01b0319166001600160a01b0385811691821790925560405163a9059cbb60e01b81529184166004830152602482018390529063a9059cbb906044016020604051808303816000875af115801561056d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105919190610fdb565b50505050565b61059f610a4f565b6104616000610d02565b6105b482338361082c565b6104f38282610bcc565b6105c6610a4f565b610461610d5c565b60606004805461033990610f7a565b600033816105eb8286610666565b90508381101561064b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e0565b6103ed8286868403610707565b6000336103ca8185856108a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610699610a4f565b6001600160a01b0381166106fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e0565b61044e81610d02565b6001600160a01b0383166107695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b6001600160a01b0382166107ca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006108388484610666565b9050600019811461059157818110156108935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e0565b6105918484848403610707565b6001600160a01b0383166109045760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e0565b6001600160a01b0382166109665760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e0565b610971838383610d99565b6001600160a01b038316600090815260208190526040902054818110156109e95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e0565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610591565b6005546001600160a01b036101009091041633146104615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e0565b610ab7610da6565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610b575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e0565b610b6360008383610d99565b8060026000828254610b759190610fb5565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610c2c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e0565b610c3882600083610d99565b6001600160a01b03821660009081526020819052604090205481811015610cac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e0565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161081f565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d64610def565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ae43390565b610da1610def565b505050565b60055460ff166104615760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e0565b60055460ff16156104615760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e0565b600060208083528351808285015260005b81811015610e6257858101830151858201604001528201610e46565b81811115610e74576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ea157600080fd5b919050565b60008060408385031215610eb957600080fd5b610ec283610e8a565b946020939093013593505050565b600080600060608486031215610ee557600080fd5b610eee84610e8a565b9250610efc60208501610e8a565b9150604084013590509250925092565b600060208284031215610f1e57600080fd5b5035919050565b600060208284031215610f3757600080fd5b610f4082610e8a565b9392505050565b60008060408385031215610f5a57600080fd5b610f6383610e8a565b9150610f7160208401610e8a565b90509250929050565b600181811c90821680610f8e57607f821691505b60208210811415610faf57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610fd657634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610fed57600080fd5b81518015158114610f4057600080fdfea26469706673582212208577046176867a43883d4c4b1064a20b73ade1e3b7a2ed93f1dd3491151133eb64736f6c634300080a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2330BC32B72A37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x8C82B PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x69 SWAP3 SWAP2 SWAP1 PUSH3 0x107 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x7F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x107 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x97 CALLER PUSH3 0xAD JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x80 MSTORE PUSH3 0x1EA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x115 SWAP1 PUSH3 0x1AD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x139 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x184 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x154 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x184 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x184 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x184 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x167 JUMP JUMPDEST POP PUSH3 0x192 SWAP3 SWAP2 POP PUSH3 0x196 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x192 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x197 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1033 PUSH3 0x20D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1D4 ADD MSTORE PUSH2 0x46D ADD MSTORE PUSH2 0x1033 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4AD5941F EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x18E JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xF7A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x365 SWAP1 PUSH2 0xF7A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x387 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x395 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x707 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E2 DUP6 DUP3 DUP6 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x40B DUP4 DUP4 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x415 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH2 0x422 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x459 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH2 0xAAF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46B PUSH2 0xA4F JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x496 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST GT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115490CC8C0E8818D85C08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F3 DUP3 DUP3 PUSH2 0xB01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x44E CALLER DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x509 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x56D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH1 0x0 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x5B4 DUP3 CALLER DUP4 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x4F3 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x5EB DUP3 DUP7 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x707 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x699 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x44E DUP2 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x838 DUP5 DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x591 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x591 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x707 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x971 DUP4 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xAB7 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xB63 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xC38 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x81F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD64 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xAE4 CALLER SWAP1 JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0xDEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE62 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE46 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC2 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEE DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xEFC PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF40 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF63 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0xF71 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFAF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH24 0x46176867A43883D4C4B1064A20B73ADE1E3B7A2ED93F1DD CALLVALUE SWAP2 ISZERO GT CALLER 0xEB PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "337:1336:7:-:0;;;449:71;;;;;;;;;;1976:113:2;;;;;;;;;;;;;-1:-1:-1;;;1976:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:2;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2065:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;936:32:0;719:10:6;936:18:0;:32::i;:::-;507:6:7::1;500:13;::::0;337:1336;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;337:1336:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;337:1336:7;;;-1:-1:-1;337:1336:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:8;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;337:1336:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 1799,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1072": {
									"entryPoint": 3481,
									"id": 1072,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_696": {
									"entryPoint": 3020,
									"id": 696,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2639,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_624": {
									"entryPoint": 2817,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 3420,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 3567,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 3494,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_784": {
									"entryPoint": 2092,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3330,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 2208,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 2735,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 1638,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 956,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_928": {
									"entryPoint": 1449,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_907": {
									"entryPoint": 1271,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cap_1081": {
									"entryPoint": null,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 1501,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 1016,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSupply_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1051": {
									"entryPoint": 1123,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_275": {
									"entryPoint": 810,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1015": {
									"entryPoint": 1470,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1431,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_285": {
									"entryPoint": 1486,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 980,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1681,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_344": {
									"entryPoint": 1624,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1024": {
									"entryPoint": 1105,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawBEP_1138": {
									"entryPoint": 1281,
									"id": 1138,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1110": {
									"entryPoint": 1050,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9735:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:8"
															},
															"nodeType": "YulIf",
															"src": "443:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:8"
															},
															"nodeType": "YulIf",
															"src": "713:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:8",
														"type": ""
													}
												],
												"src": "616:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:8"
															},
															"nodeType": "YulIf",
															"src": "891:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:8",
														"type": ""
													}
												],
												"src": "794:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:8",
														"type": ""
													}
												],
												"src": "1053:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:8",
														"type": ""
													}
												],
												"src": "1245:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:8"
															},
															"nodeType": "YulIf",
															"src": "1541:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"src": "1427:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:8",
														"type": ""
													}
												],
												"src": "1760:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:8"
															},
															"nodeType": "YulIf",
															"src": "2029:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2113:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2100:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:8",
														"type": ""
													}
												],
												"src": "1949:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2204:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2250:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2262:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2252:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2252:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:32:8"
															},
															"nodeType": "YulIf",
															"src": "2214:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2275:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2304:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2285:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2181:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2193:6:8",
														"type": ""
													}
												],
												"src": "2134:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2426:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2436:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2509:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2514:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2505:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2505:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2518:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2501:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2489:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2395:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2406:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2417:4:8",
														"type": ""
													}
												],
												"src": "2325:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:32:8"
															},
															"nodeType": "YulIf",
															"src": "2630:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2701:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2739:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2749:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2589:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2601:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2609:6:8",
														"type": ""
													}
												],
												"src": "2533:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2853:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2863:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2880:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2894:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2924:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2930:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2898:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2971:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2973:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2987:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2995:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2983:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2973:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2951:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:26:8"
															},
															"nodeType": "YulIf",
															"src": "2941:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3061:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3094:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3085:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3085:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3075:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3129:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3119:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3147:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3017:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3040:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3048:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3037:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3037:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3014:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:38:8"
															},
															"nodeType": "YulIf",
															"src": "3011:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2833:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2842:6:8",
														"type": ""
													}
												],
												"src": "2798:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3231:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3266:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3294:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3299:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3290:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3290:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3280:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3331:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3334:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3324:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3324:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3324:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3352:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3352:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3247:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3254:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:13:8"
															},
															"nodeType": "YulIf",
															"src": "3241:136:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3386:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3397:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3400:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3214:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3217:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3223:3:8",
														"type": ""
													}
												],
												"src": "3183:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3587:169:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3604:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3677:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3688:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3673:18:8"
																	},
																	{
																		"hexValue": "45524332303a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3693:21:8",
																		"type": "",
																		"value": "ERC20: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3724:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3724:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3564:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3578:4:8",
														"type": ""
													}
												],
												"src": "3413:343:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3900:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3912:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3900:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3957:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3973:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3978:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3969:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3969:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3982:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3965:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3953:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3953:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3935:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4006:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4017:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4022:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3851:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3862:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3870:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3881:4:8",
														"type": ""
													}
												],
												"src": "3761:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4164:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4173:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4176:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4166:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4166:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4166:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:32:8"
															},
															"nodeType": "YulIf",
															"src": "4128:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4189:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4202:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4193:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4271:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4280:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4283:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4273:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4273:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4273:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4240:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4261:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4254:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4254:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4247:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4247:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4237:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4237:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:40:8"
															},
															"nodeType": "YulIf",
															"src": "4227:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4296:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4306:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4084:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4095:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4107:6:8",
														"type": ""
													}
												],
												"src": "4040:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4496:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4513:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4524:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4506:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4547:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4558:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4543:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4543:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4563:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4536:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4536:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4586:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4597:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4582:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4582:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4602:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4575:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4657:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4668:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4653:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4673:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4646:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4690:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4702:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4713:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4690:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4473:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4487:4:8",
														"type": ""
													}
												],
												"src": "4322:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4902:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4919:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4912:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4912:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4912:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4953:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4964:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4949:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4949:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5008:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4981:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5074:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5079:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5052:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5097:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5109:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5120:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5105:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5097:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4879:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4893:4:8",
														"type": ""
													}
												],
												"src": "4728:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5326:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5337:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5371:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5410:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5415:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5388:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5486:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5502:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5510:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5502:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5286:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5300:4:8",
														"type": ""
													}
												],
												"src": "5135:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5714:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5724:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5765:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5776:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5761:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5754:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5754:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5815:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5820:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5793:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5793:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5875:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5886:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5871:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5891:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5864:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5905:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5917:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5928:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5913:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5905:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5705:4:8",
														"type": ""
													}
												],
												"src": "5540:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6117:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6134:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6127:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6127:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6168:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6179:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6164:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6164:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6184:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6157:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6207:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6218:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6203:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6223:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6196:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6196:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6094:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6108:4:8",
														"type": ""
													}
												],
												"src": "5943:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6475:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6492:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6503:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6485:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6485:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6526:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6537:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6515:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6565:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6576:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6581:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6554:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6636:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6647:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6632:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6652:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6625:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6625:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6669:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6677:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6669:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6452:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6466:4:8",
														"type": ""
													}
												],
												"src": "6301:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6881:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6898:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6909:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6891:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6891:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6932:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6943:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6928:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6928:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6948:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6921:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6982:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6967:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6987:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6960:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6960:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7042:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7053:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7038:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7038:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7058:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7031:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7073:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7085:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7096:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7081:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7073:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6858:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6872:4:8",
														"type": ""
													}
												],
												"src": "6707:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7285:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7302:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7336:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7347:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7325:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7325:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7375:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7386:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7371:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7371:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7391:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7364:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7364:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7446:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7457:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7462:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7435:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7480:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7492:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7503:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7262:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7276:4:8",
														"type": ""
													}
												],
												"src": "7111:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7692:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7709:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7720:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7702:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7702:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7702:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7743:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7754:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7759:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7732:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7798:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7771:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7854:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7865:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7842:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7669:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7683:4:8",
														"type": ""
													}
												],
												"src": "7518:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8053:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8070:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8104:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8115:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8100:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8100:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8120:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8143:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8154:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8139:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8139:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8159:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8132:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8214:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8225:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8210:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8202:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8030:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8044:4:8",
														"type": ""
													}
												],
												"src": "7879:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8413:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8430:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8423:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8423:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8475:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8460:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8480:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8453:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8514:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8519:34:8",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8492:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:18:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8590:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8603:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8615:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8626:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8611:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8603:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8390:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8404:4:8",
														"type": ""
													}
												],
												"src": "8239:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8815:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8832:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8843:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8825:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8825:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8825:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8866:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8877:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8862:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8862:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8882:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8855:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8905:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8916:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8901:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8921:34:8",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8894:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8894:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8976:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8987:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8972:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8972:18:8"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8992:4:8",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8965:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9006:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8792:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8806:4:8",
														"type": ""
													}
												],
												"src": "8641:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9218:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9235:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9228:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9269:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9265:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9285:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9258:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9308:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9319:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9304:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9324:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9379:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9356:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9195:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9209:4:8",
														"type": ""
													}
												],
												"src": "9044:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9567:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9577:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9577:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9629:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9634:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9607:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9657:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9668:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9653:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9673:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9646:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9701:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9713:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9724:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9701:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9544:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9558:4:8",
														"type": ""
													}
												],
												"src": "9393:340:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ERC20: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"992": [
									{
										"length": 32,
										"start": 468
									},
									{
										"length": 32,
										"start": 1133
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4AD5941F EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0xF0C JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x18E JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x597 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x18E PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0xF25 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xF7A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x365 SWAP1 PUSH2 0xF7A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x387 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x395 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x707 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E2 DUP6 DUP3 DUP6 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3ED DUP6 DUP6 DUP6 PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x40B DUP4 DUP4 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x415 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST PUSH2 0x422 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x459 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH2 0xAAF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46B PUSH2 0xA4F JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x496 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST GT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115490CC8C0E8818D85C08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F3 DUP3 DUP3 PUSH2 0xB01 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x44E CALLER DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x509 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x56D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH1 0x0 PUSH2 0xD02 JUMP JUMPDEST PUSH2 0x5B4 DUP3 CALLER DUP4 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x4F3 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x5C6 PUSH2 0xA4F JUMP JUMPDEST PUSH2 0x461 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x5EB DUP3 DUP7 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x64B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x707 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x699 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x44E DUP2 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x838 DUP5 DUP5 PUSH2 0x666 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x591 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x591 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x707 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x971 DUP4 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xAB7 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xB63 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD99 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xC38 DUP3 PUSH1 0x0 DUP4 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x81F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD64 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xAE4 CALLER SWAP1 JUMP JUMPDEST PUSH2 0xDA1 PUSH2 0xDEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE62 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xE46 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC2 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEEE DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xEFC PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF40 DUP3 PUSH2 0xE8A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF63 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0xF71 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFAF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH24 0x46176867A43883D4C4B1064A20B73ADE1E3B7A2ED93F1DD CALLVALUE SWAP2 ISZERO GT CALLER 0xEB PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "337:1336:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4431:197:2;1053:187:8;3242:106:2;3329:12;;3242:106;;;1391:25:8;;;1379:2;1364:18;3242:106:2;1245:177:8;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1902:36:8;;1890:2;1875:18;3091:91:2;1760:184:8;1110:81:7;1180:4;1110:81;;5871:234:2;;;;;;:::i;:::-;;:::i;1345:104:7:-;;;:::i;:::-;;591:63;;;:::i;660:172::-;;;;;;:::i;:::-;;:::i;578:89:4:-;;;;;;:::i;:::-;;:::i;1477:193:7:-;;;;;;:::i;:::-;;:::i;1615:84:1:-;1685:7;;;;1615:84;;3406:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:0;;;:::i;973:161:4:-;;;;;;:::i;:::-;;:::i;526:59:7:-;;;:::i;1201:85:0:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;2489:32:8;;;2471:51;;2459:2;2444:18;1201:85:0;2325:203:8;2365:102:2;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2154:98:2:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:2;719:10:6;4584:7:2;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:2;;4431:197;-1:-1:-1;;;4431:197:2:o;5190:286::-;5317:4;719:10:6;5373:38:2;5389:4;719:10:6;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:6;6013:64:2;719:10:6;6029:7:2;6066:10;6038:25;719:10:6;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1345:104:7:-;1094:13:0;:11;:13::i;:::-;1391:51:7::1;::::0;1399:10:::1;::::0;1420:21:::1;1391:51:::0;::::1;;;::::0;::::1;::::0;;;1420:21;1399:10;1391:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1345:104::o:0;591:63::-;1094:13:0;:11;:13::i;:::-;637:10:7::1;:8;:10::i;:::-;591:63::o:0;660:172::-;1094:13:0;:11;:13::i;:::-;1180:4:7;759:6:::1;737:19;3329:12:2::0;;;3242:106;737:19:7::1;:28;;;;:::i;:::-;:37;;729:69;;;::::0;-1:-1:-1;;;729:69:7;;3615:2:8;729:69:7::1;::::0;::::1;3597:21:8::0;3654:2;3634:18;;;3627:30;-1:-1:-1;;;3673:18:8;;;3666:49;3732:18;;729:69:7::1;;;;;;;;;808:17;814:2;818:6;808:5;:17::i;:::-;660:172:::0;;:::o;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;1477:193:7:-;1094:13:0;:11;:13::i;:::-;1583:10:7::1;:40:::0;;-1:-1:-1;;;;;;1583:40:7::1;-1:-1:-1::0;;;;;1583:40:7;;::::1;::::0;;::::1;::::0;;;1633:30:::1;::::0;-1:-1:-1;;;1633:30:7;;3953:32:8;;;1633:30:7::1;::::0;::::1;3935:51:8::0;4002:18;;;3995:34;;;1583:40:7;1633:19:::1;::::0;3908:18:8;;1633:30:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1477:193:::0;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;973:161:4:-:0;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;526:59:7:-;1094:13:0;:11;:13::i;:::-;570:8:7::1;:6;:8::i;2365:102:2:-:0;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:2;6766:25;719:10:6;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:2;;4524:2:8;6801:85:2;;;4506:21:8;4563:2;4543:18;;;4536:30;4602:34;4582:18;;;4575:62;-1:-1:-1;;;4653:18:8;;;4646:35;4698:19;;6801:85:2;4322:401:8;6801:85:2;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:2;719:10:6;3877:2:2;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;4930:2:8;2161:73:0::1;::::0;::::1;4912:21:8::0;4969:2;4949:18;;;4942:30;5008:34;4988:18;;;4981:62;-1:-1:-1;;;5059:18:8;;;5052:36;5105:19;;2161:73:0::1;4728:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;10504:370:2:-:0;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;10627:68:2;;5337:2:8;10627:68:2;;;5319:21:8;5376:2;5356:18;;;5349:30;5415:34;5395:18;;;5388:62;-1:-1:-1;;;5466:18:8;;;5459:34;5510:19;;10627:68:2;5135:400:8;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;10705:68:2;;5742:2:8;10705:68:2;;;5724:21:8;5781:2;5761:18;;;5754:30;5820:34;5800:18;;;5793:62;-1:-1:-1;;;5871:18:8;;;5864:32;5913:19;;10705:68:2;5540:398:8;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:8;;;10835:32:2;;1364:18:8;10835:32:2;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:2;;6145:2:8;11404:68:2;;;6127:21:8;6184:2;6164:18;;;6157:30;6223:31;6203:18;;;6196:59;6272:18;;11404:68:2;5943:353:8;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;7591:68:2;;6503:2:8;7591:68:2;;;6485:21:8;6542:2;6522:18;;;6515:30;6581:34;6561:18;;;6554:62;-1:-1:-1;;;6632:18:8;;;6625:35;6677:19;;7591:68:2;6301:401:8;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;7669:64:2;;6909:2:8;7669:64:2;;;6891:21:8;6948:2;6928:18;;;6921:30;6987:34;6967:18;;;6960:62;-1:-1:-1;;;7038:18:8;;;7031:33;7081:19;;7669:64:2;6707:399:8;7669:64:2;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:2;;7313:2:8;7840:72:2;;;7295:21:8;7352:2;7332:18;;;7325:30;7391:34;7371:18;;;7364:62;-1:-1:-1;;;7442:18:8;;;7435:36;7488:19;;7840:72:2;7111:402:8;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:8;;;8161:13:2;;8210:26;;1364:18:8;8210:26:2;;;;;;;8247:37;9422:659;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;;;;;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7720:2:8;1414:68:0;;;7702:21:8;;;7739:18;;;7732:30;7798:34;7778:18;;;7771:62;7850:18;;1414:68:0;7518:356:8;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;2489:32:8;;;2471:51;;2459:2;2444:18;2521:22:1::1;;;;;;;2433:117::o:0;8567:535:2:-;-1:-1:-1;;;;;8650:21:2;;8642:65;;;;-1:-1:-1;;;8642:65:2;;8081:2:8;8642:65:2;;;8063:21:8;8120:2;8100:18;;;8093:30;8159:33;8139:18;;;8132:61;8210:18;;8642:65:2;7879:355:8;8642:65:2;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1391:25:8;;;8999:37:2;;1364:18:8;8999:37:2;;;;;;;660:172:7;;:::o;9422:659:2:-;-1:-1:-1;;;;;9505:21:2;;9497:67;;;;-1:-1:-1;;;9497:67:2;;8441:2:8;9497:67:2;;;8423:21:8;8480:2;8460:18;;;8453:30;8519:34;8499:18;;;8492:62;-1:-1:-1;;;8570:18:8;;;8563:31;8611:19;;9497:67:2;8239:397:8;9497:67:2;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;-1:-1:-1;;;;;9660:18:2;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:2;;8843:2:8;9688:71:2;;;8825:21:8;8882:2;8862:18;;;8855:30;8921:34;8901:18;;;8894:62;-1:-1:-1;;;8972:18:8;;;8965:32;9014:19;;9688:71:2;8641:398:8;9688:71:2;-1:-1:-1;;;;;9793:18:2;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1391:25:8;;;9793:9:2;;:18;9978:37;;1364:18:8;9978:37:2;1245:177:8;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;838:193:7;1239:19:1;:17;:19::i;:::-;9487:594:2;9422:659;;:::o;1945:106:1:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;9246:2:8;2003:41:1;;;9228:21:8;9285:2;9265:18;;;9258:30;-1:-1:-1;;;9304:18:8;;;9297:50;9364:18;;2003:41:1;9044:344:8;1767:106:1;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;9595:2:8;1828:38:1;;;9577:21:8;9634:2;9614:18;;;9607:30;-1:-1:-1;;;9653:18:8;;;9646:46;9709:18;;1828:38:1;9393:340:8;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:8;;1949:180;-1:-1:-1;1949:180:8:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:8:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:225::-;3223:3;3254:1;3250:6;3247:1;3244:13;3241:136;;;3299:10;3294:3;3290:20;3287:1;3280:31;3334:4;3331:1;3324:15;3362:4;3359:1;3352:15;3241:136;-1:-1:-1;3393:9:8;;3183:225::o;4040:277::-;4107:6;4160:2;4148:9;4139:7;4135:23;4131:32;4128:52;;;4176:1;4173;4166:12;4128:52;4208:9;4202:16;4261:5;4254:13;4247:21;4240:5;4237:32;4227:60;;4283:1;4280;4273:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "829400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24648",
								"balanceOf(address)": "2585",
								"burn(uint256)": "53060",
								"burnFrom(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "26995",
								"increaseAllowance(address,uint256)": "27002",
								"maxSupply()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2463",
								"pause()": "infinite",
								"paused()": "2327",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "53301",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28501",
								"unpause()": "infinite",
								"withdraw()": "infinite",
								"withdrawBEP(address,address,uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 520,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 449,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2330BC32B72A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8C82B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 507,
									"end": 513,
									"name": "PUSH",
									"source": 7,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 500,
									"end": 513,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 500,
									"end": 513,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "992"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 1673,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208577046176867a43883d4c4b1064a20b73ade1e3b7a2ed93f1dd3491151133eb64736f6c634300080a0033",
									".code": [
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "39509351"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "39509351"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "4AD5941F"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "355274EA"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 337,
											"end": 1673,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1110,
											"end": 1191,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1110,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1184,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "992"
										},
										{
											"begin": 1110,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 591,
											"end": 654,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 591,
											"end": 654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 591,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 591,
											"end": 654,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2325,
											"end": 2528,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1449,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 654,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 591,
											"end": 654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 637,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 637,
											"end": 647,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 647,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 637,
											"end": 647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 654,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1184,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "992"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 737,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 756,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 737,
											"end": 756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 737,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 737,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 737,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 737,
											"end": 765,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 737,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 774,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 737,
											"end": 774,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 729,
											"end": 798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC8C0E8818D85C08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3715,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3732,
											"end": 3750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 729,
											"end": 798,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 729,
											"end": 798,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 729,
											"end": 798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 818,
											"end": 824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 808,
											"end": 825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 808,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4029,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1633,
											"end": 1652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1670,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 526,
											"end": 585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 570,
											"end": 578,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4506,
											"end": 4527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4636,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4322,
											"end": 4723,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5052,
											"end": 5088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5124,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5105,
											"end": 5124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4728,
											"end": 5130,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5340,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5415,
											"end": 5449,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5388,
											"end": 5450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5459,
											"end": 5493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5510,
											"end": 5529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5135,
											"end": 5535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 5744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5781,
											"end": 5783,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5820,
											"end": 5854,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 5932,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5913,
											"end": 5932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5540,
											"end": 5938,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6186,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6223,
											"end": 6254,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5943,
											"end": 6296,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6503,
											"end": 6505,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6544,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6615,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6561,
											"end": 6579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6554,
											"end": 6616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6632,
											"end": 6650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6625,
											"end": 6660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6301,
											"end": 6702,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6891,
											"end": 6912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 6950,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6921,
											"end": 6951,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 7021,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6967,
											"end": 6985,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6967,
											"end": 6985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6967,
											"end": 6985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 7022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7031,
											"end": 7064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6707,
											"end": 7106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7295,
											"end": 7316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7325,
											"end": 7355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7425,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7371,
											"end": 7389,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7371,
											"end": 7389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7371,
											"end": 7389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7426,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7488,
											"end": 7507,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7488,
											"end": 7507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7111,
											"end": 7513,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7832,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7771,
											"end": 7833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7518,
											"end": 7874,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8567,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8650,
											"end": 8671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8063,
											"end": 8084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8122,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8192,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7879,
											"end": 8234,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8642,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8747,
											"end": 8748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8718,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8718,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8778,
											"end": 8790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8974,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9036,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 660,
											"end": 832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 660,
											"end": 832,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9505,
											"end": 9526,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8423,
											"end": 8444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8482,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8483,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8519,
											"end": 8553,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8492,
											"end": 8554,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8594,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8611,
											"end": 8630,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8611,
											"end": 8630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8239,
											"end": 8636,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 9497,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9575,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9696,
											"end": 9720,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8843,
											"end": 8845,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8921,
											"end": 8955,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8894,
											"end": 8956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8965,
											"end": 8997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9014,
											"end": 9033,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9014,
											"end": 9033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8641,
											"end": 9039,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9688,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9837,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9837,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9942,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9802,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 1031,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 838,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 10081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9422,
											"end": 10081,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9265,
											"end": 9283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9288,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9297,
											"end": 9347,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9044,
											"end": 9388,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9634,
											"end": 9636,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9607,
											"end": 9637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9653,
											"end": 9671,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9653,
											"end": 9671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9646,
											"end": 9692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9709,
											"end": 9727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9393,
											"end": 9733,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2264,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2983,
											"end": 3000,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2941,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3052,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3085,
											"end": 3105,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3119,
											"end": 3134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3162,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3408,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3183,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3257,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3377,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3241,
											"end": 3377,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3309,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3294,
											"end": 3297,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3290,
											"end": 3310,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3366,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3377,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3241,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3408,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4040,
											"end": 4317,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4040,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4128,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4202,
											"end": 4218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4267,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4245,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4269,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4227,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4227,
											"end": 4287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4283,
											"end": 4284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4281,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4273,
											"end": 4285,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw()": "3ccfd60b",
							"withdrawBEP(address,address,uint256)": "4ad5941f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBEP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FaxenToken.sol\":\"FaxenToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/FaxenToken.sol\":{\"keccak256\":\"0x1046e36adba227c20985f6d26d105308d7acf9a74793ca3710f2e0000ef1e4bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67fd0679d3009e4037ae0799d8feebd2c0adbeaba2ad384706acd5ab057fb701\",\"dweb:/ipfs/QmWkP1paLx6oggnVLxqgg4PyLnf43QsFkwPUJyuFsWF9Jy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 130,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1113,
								"contract": "contracts/FaxenToken.sol:FaxenToken",
								"label": "exContract",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(ERC20)807"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)807": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 977,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								976
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 977,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								976
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 808,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 886,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 955,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 977,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "1419:7:2"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:2"
								},
								{
									"baseName": {
										"id": 229,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "1428:6:2"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:2"
								},
								{
									"baseName": {
										"id": 231,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "1436:14:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 807,
							"linearizedBaseContracts": [
								807,
								954,
								885,
								976
							],
							"name": "ERC20",
							"nameLocation": "1410:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1457:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1509:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 241,
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 240,
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1583:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1618:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1644:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2032:57:2",
										"statements": [
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2042:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2050:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:2"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1988:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2009:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:2"
									},
									"scope": 807,
									"src": "1976:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2223:29:2",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "2240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "2233:12:2"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:2"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2208:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:2"
									},
									"scope": 807,
									"src": "2154:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2436:31:2",
										"statements": [
											{
												"expression": {
													"id": 282,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "2446:14:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:2"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2421:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:2"
									},
									"scope": 807,
									"src": "2365:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "3156:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "3166:9:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3149:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:2"
									},
									"scope": 807,
									"src": "3091:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "3312:36:2",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 244,
													"src": "3329:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "3322:19:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:2"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3303:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:2"
									},
									"scope": 807,
									"src": "3242:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3489:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3506:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3516:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3499:25:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:2"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3425:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3480:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:2"
									},
									"scope": 807,
									"src": "3406:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										852
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3812:104:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "3822:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3838:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3877:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3881:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "3860:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "3898:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:2"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3745:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3806:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:2"
									},
									"scope": 807,
									"src": "3727:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4072:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 355,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4089:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"id": 358,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4108:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 360,
												"nodeType": "Return",
												"src": "4082:34:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:2"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "3993:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4008:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4063:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:2"
									},
									"scope": 807,
									"src": "3974:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4520:108:2",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "4530:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4546:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4577:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4584:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "4593:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4568:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 385,
												"nodeType": "Return",
												"src": "4610:11:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:2"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4465:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4514:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:2"
									},
									"scope": 807,
									"src": "4431:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5323:153:2",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "5333:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5351:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5389:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5404:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "5373:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5437:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5441:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5421:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "5458:11:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:2"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5221:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5243:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5263:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5317:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:2"
									},
									"scope": 807,
									"src": "5190:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "5965:140:2",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "5975:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5991:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6022:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "6029:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "6048:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 440,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "6055:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6038:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 442,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6066:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "6013:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 447,
												"nodeType": "Return",
												"src": "6087:11:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5898:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5915:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5959:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:2"
									},
									"scope": 807,
									"src": "5871:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "6691:328:2",
										"statements": [
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6701:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 461,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6717:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:2"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6739:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6776:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "6783:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "6766:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6809:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 473,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "6829:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:2"
											},
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6929:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6936:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "6945:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 482,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6964:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 478,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "6920:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 485,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 458,
												"id": 488,
												"nodeType": "Return",
												"src": "7001:11:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6619:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6636:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6685:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:2"
									},
									"scope": 807,
									"src": "6592:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "7581:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "7599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "7677:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "7765:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "7771:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "7775:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "7744:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "7793:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"baseExpression": {
														"id": 528,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "7815:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 530,
													"indexExpression": {
														"id": 529,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7825:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "7848:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 534,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "7863:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:2"
											},
											{
												"id": 553,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:2",
												"statements": [
													{
														"expression": {
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 539,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "7946:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 541,
																"indexExpression": {
																	"id": 540,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7956:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 542,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "7964:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 543,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "7978:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 546,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:2"
													},
													{
														"expression": {
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8161:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8171:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 550,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "8178:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 552,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8219:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8225:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8229:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8210:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "8205:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8267:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8273:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8277:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "8247:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7501:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7523:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7543:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:2"
									},
									"scope": 807,
									"src": "7473:818:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "8632:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "8650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 577,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8751:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "8718:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:2"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "8778:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 595,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "8794:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:2"
											},
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:2",
												"statements": [
													{
														"expression": {
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 598,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8946:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "8956:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 601,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "8968:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 603,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9020:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9029:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8999:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "EmitStatement",
												"src": "8994:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 615,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9079:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9088:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9047:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8599:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:2"
									},
									"scope": 807,
									"src": "8567:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "9487:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "9505:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9617:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9575:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:2"
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "9635:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"baseExpression": {
														"id": 653,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "9660:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "9670:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "9696:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9714:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:2"
											},
											{
												"id": 676,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:2",
												"statements": [
													{
														"expression": {
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 664,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "9793:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 666,
																"indexExpression": {
																	"id": 665,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "9803:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 667,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "9814:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 668,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "9831:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 671,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:2"
													},
													{
														"expression": {
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 672,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "9930:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9946:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 675,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 678,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9987:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10008:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 677,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "9978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "EmitStatement",
												"src": "9973:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "10046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 688,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10067:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "10026:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9437:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9454:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:2"
									},
									"scope": 807,
									"src": "9422:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "10617:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10635:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 708,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10713:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:2"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 726,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "10784:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 729,
															"indexExpression": {
																"id": 727,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10796:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 731,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10814:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "10844:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10851:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "10860:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "10835:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "10830:37:2"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10531:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10579:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:2"
									},
									"scope": 807,
									"src": "10504:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "11275:321:2",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "11285:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"id": 754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "11322:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11329:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 753,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11312:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11351:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 760,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 759,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "11347:243:2",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "11390:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 766,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "11412:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 767,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "11432:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 765,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:2"
														},
														{
															"id": 780,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 773,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "11523:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 774,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "11530:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 775,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "11539:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 776,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "11558:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 772,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 741,
																			"src": "11514:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 779,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11189:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11212:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:2"
									},
									"scope": 807,
									"src": "11155:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "12299:2:2",
										"statements": []
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12219:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12241:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:2"
									},
									"scope": 807,
									"src": "12180:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "13007:2:2",
										"statements": []
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12927:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12949:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12969:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:2"
									},
									"scope": 807,
									"src": "12889:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 808,
							"src": "1401:11610:2",
							"usedErrors": []
						}
					],
					"src": "105:12907:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 810,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 885,
							"linearizedBaseContracts": [
								885
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 819,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 828,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 885,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 885,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 885,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 885,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 885,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 885,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 886,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 808,
							"src": "149:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 977,
							"src": "172:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 891,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "454:7:4"
									},
									"id": 892,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:4"
								},
								{
									"baseName": {
										"id": 893,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "463:5:4"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 929,
							"linearizedBaseContracts": [
								929,
								807,
								954,
								885,
								976
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "623:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 901,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "639:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "653:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "633:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "633:27:4"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:4",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "592:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:4"
									},
									"scope": 929,
									"src": "578:89:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "1039:95:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 917,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "1074:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 915,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1049:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1105:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:4",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "991:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1008:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:4"
									},
									"scope": 929,
									"src": "973:161:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 930,
							"src": "419:717:4",
							"usedErrors": []
						}
					],
					"src": "124:1013:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 886,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "305:6:5"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 954,
							"linearizedBaseContracts": [
								954,
								885
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 954,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 954,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 950,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 954,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 955,
							"src": "277:405:5",
							"usedErrors": []
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							976
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 962,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 961,
												"id": 964,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 976,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 971,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 970,
												"id": 973,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 976,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/FaxenToken.sol": {
				"ast": {
					"absolutePath": "contracts/FaxenToken.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"FaxenToken": [
							1139
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						]
					},
					"id": 1140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 979,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 808,
							"src": "57:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 930,
							"src": "113:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 221,
							"src": "188:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1140,
							"sourceUnit": 113,
							"src": "244:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "360:5:7"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "360:5:7"
								},
								{
									"baseName": {
										"id": 985,
										"name": "ERC20Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 929,
										"src": "367:13:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "367:13:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "382:8:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "382:8:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "392:7:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "392:7:7"
								}
							],
							"canonicalName": "FaxenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1139,
							"linearizedBaseContracts": [
								1139,
								112,
								220,
								929,
								807,
								954,
								885,
								976
							],
							"name": "FaxenToken",
							"nameLocation": "346:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 992,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "434:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "408:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 991,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "490:30:7",
										"statements": [
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "500:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000000"
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3237",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "511:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_27_by_1",
																"typeString": "int_const 27"
															},
															"value": "27"
														},
														"src": "507:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000000"
														}
													},
													"src": "500:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "500:13:7"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "466178656e546f6b656e",
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "469:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_81cefa19f3a150fdf979813ac3170e440e790094729383250745178e3ef393ca",
														"typeString": "literal_string \"FaxenToken\""
													},
													"value": "FaxenToken"
												},
												{
													"hexValue": "464158",
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_782c236a9dd47e8b5e9e4defc470b5a470f6dc2009d02c0d2b72a35d1726196f",
														"typeString": "literal_string \"FAX\""
													},
													"value": "FAX"
												}
											],
											"id": 997,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 994,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 807,
												"src": "463:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "463:26:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:0:7"
									},
									"scope": 1139,
									"src": "449:71:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "560:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1011,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "570:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "570:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "550:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "550:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "535:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:2:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "560:0:7"
									},
									"scope": 1139,
									"src": "526:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "627:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1020,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "637:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "637:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1017,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "617:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "617:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "600:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:2:7"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:0:7"
									},
									"scope": 1139,
									"src": "591:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "719:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1034,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "737:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$807_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 305,
																		"src": "737:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "737:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1037,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "759:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "737:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1039,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "769:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "769:5:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "737:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20636170206578636565646564",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "776:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5",
																"typeString": "literal_string \"ERC20: cap exceeded\""
															},
															"value": "ERC20: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b196d04aa8b19a17cc06098e43b9795628c4df0d716802f677ced017feecade5",
																"typeString": "literal_string \"ERC20: cap exceeded\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "729:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "729:69:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "814:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "818:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "808:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "808:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "808:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1030,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "709:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "709:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "669:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "682:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "674:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "686:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:28:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:7"
									},
									"scope": 1139,
									"src": "660:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "970:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "1007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "1013:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1063,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "980:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FaxenToken_$1139_$",
																"typeString": "type(contract super FaxenToken)"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "980:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "980:44:7"
											}
										]
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1059,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "935:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "935:13:7"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "847:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1061,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "957:8:7"
									},
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "876:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "868:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "890:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "882:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "902:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "894:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:42:7"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:0:7"
									},
									"scope": 1139,
									"src": "838:193:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "1163:28:7",
										"statements": [
											{
												"expression": {
													"id": 1078,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "1180:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1079,
												"nodeType": "Return",
												"src": "1173:11:7"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1037:68:7",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "1119:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:7"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "1154:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:9:7"
									},
									"scope": 1139,
									"src": "1110:81:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1310:29:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1087,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "1327:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1327:5:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1089,
												"nodeType": "Return",
												"src": "1320:12:7"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "1197:49:7",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "d5abeb01",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "1260:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:7"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1301:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:9:7"
									},
									"scope": 1139,
									"src": "1251:88:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1381:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1428:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FaxenToken_$1139",
																			"typeString": "contract FaxenToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FaxenToken_$1139",
																			"typeString": "contract FaxenToken"
																		}
																	],
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1420:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1420:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1420:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1420:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1098,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1399:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1399:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1391:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1391:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1391:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1391:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "1391:51:7"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1093,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1372:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1372:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "1354:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:2:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:7"
									},
									"scope": 1139,
									"src": "1345:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1113,
									"mutability": "mutable",
									"name": "exContract",
									"nameLocation": "1461:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1139,
									"src": "1455:16:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$807",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1112,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1111,
											"name": "ERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 807,
											"src": "1455:5:7"
										},
										"referencedDeclaration": 807,
										"src": "1455:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$807",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "1573:97:7",
										"statements": [
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1124,
														"name": "exContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "1583:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$807",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1126,
																"name": "tokenContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "1602:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1125,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1596:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$807_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1596:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$807",
															"typeString": "contract ERC20"
														}
													},
													"src": "1583:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$807",
														"typeString": "contract ERC20"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1583:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1653:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "1656:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1130,
															"name": "exContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1633:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "1633:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1633:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "1633:30:7"
											}
										]
									},
									"functionSelector": "4ad5941f",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1563:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1563:9:7"
										}
									],
									"name": "withdrawBEP",
									"nameLocation": "1486:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenContractAddress",
												"nameLocation": "1506:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1498:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1536:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1528:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1548:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "1540:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:58:7"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1573:0:7"
									},
									"scope": 1139,
									"src": "1477:193:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1140,
							"src": "337:1336:7",
							"usedErrors": []
						}
					],
					"src": "32:1642:7"
				},
				"id": 7
			}
		}
	}
}